document.addEventListener('DOMContentLoaded', function () {
    const form = document.querySelector('#addItemModal form');
    const itemNameInput = document.getElementById('item_name');
    const damageInput = document.getElementById('damage');
    const fireRateInput = document.getElementById('fire_rate');

    /**
     * –ü–æ–∫–∞–∑—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –ø—ñ–¥ –µ–ª–µ–º–µ–Ω—Ç–æ–º —Ñ–æ—Ä–º–∏.
     *
     * @param {HTMLElement} element - –ü–æ–ª–µ —Ñ–æ—Ä–º–∏.
     * @param {string} message - –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
     */
    function showError(element, message) {
        const existingError = element.parentElement.querySelector('.error-message');
        if (existingError) existingError.remove();

        const error = document.createElement('div');
        error.textContent = message;
        error.classList.add('error-message');
        error.style.color = 'white';
        error.style.backgroundColor = 'red';
        error.style.marginTop = '5px';
        error.style.padding = '5px';
        error.style.borderRadius = '5px';
        element.parentElement.appendChild(error);
    }

    /**
     * –í–∏–¥–∞–ª—è—î –≤—Å—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫–∏.
     */
    function clearErrors() {
        const errors = document.querySelectorAll('.error-message');
        errors.forEach(error => error.remove());
    }

    // –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º–∏
    form.addEventListener('submit', function (e) {
        e.preventDefault();
        clearErrors();
        let hasError = false;

        // üî∏ –ù–∞–∑–≤–∞ –ø—Ä–µ–¥–º–µ—Ç–∞: –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∞, –¥–æ 15 —Å–∏–º–≤–æ–ª—ñ–≤, –º–∞–∫—Å 1 –ø—Ä–æ–±—ñ–ª
        const itemNameValue = itemNameInput.value.trim();
        const itemNameRegex = /^[a-zA-Z0-9]{1,}[a-zA-Z0-9\s]{0,14}$/;
        const spaceCount = (itemNameValue.match(/\s/g) || []).length;
        if (!itemNameValue) {
            showError(itemNameInput, '–ù–∞–∑–≤–∞ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∞ –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è.');
            hasError = true;
        } else if (!itemNameRegex.test(itemNameValue) || spaceCount > 1) {
            showError(itemNameInput, '–ù–∞–∑–≤–∞ –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –ª–∏—à–µ –±—É–∫–≤–∏, —Ü–∏—Ñ—Ä–∏, –º–∞–∫—Å–∏–º—É–º 1 –ø—Ä–æ–±—ñ–ª —ñ –¥–æ 15 —Å–∏–º–≤–æ–ª—ñ–≤.');
            hasError = true;
        }

        // üî∏ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —à–∫–æ–¥–∏ (damage): –ª–∏—à–µ —á–∏—Å–ª–∞ –¥–æ 15 —Ü–∏—Ñ—Ä
        const damageValue = damageInput.value.trim();
        const damageRegex = /^\d{1,15}$/;
        if (!damageValue) {
            showError(damageInput, '–®–∫–æ–¥–∞ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∞ –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è.');
            hasError = true;
        } else if (!damageRegex.test(damageValue)) {
            showError(damageInput, '–®–∫–æ–¥–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ —á–∏—Å–ª–æ–º –¥–æ 15 —Ü–∏—Ñ—Ä.');
            hasError = true;
        }

        // üî∏ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —à–≤–∏–¥–∫–æ—Å—Ç—ñ –≤–æ–≥–Ω—é (fire rate): –¥–æ 8 —Ü–∏—Ñ—Ä
        const fireRateValue = fireRateInput.value.trim();
        const fireRateRegex = /^\d{1,8}$/;
        if (!fireRateValue) {
            showError(fireRateInput, '–ü–æ—Å—Ç—Ä—ñ–ª—ñ–≤ –≤ —Å–µ–∫—É–Ω–¥—É –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–µ –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è.');
            hasError = true;
        } else if (!fireRateRegex.test(fireRateValue)) {
            showError(fireRateInput, '–ü–æ—Å—Ç—Ä—ñ–ª—ñ–≤ –≤ —Å–µ–∫—É–Ω–¥—É –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ —á–∏—Å–ª–æ–º –¥–æ 8 —Ü–∏—Ñ—Ä.');
            hasError = true;
        }

        if (!hasError) {
            form.submit();
        }
    });
});
